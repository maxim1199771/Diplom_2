{"name": "Проверка ответа о создании заказа на запрос с указанными ингредиентами неаутентифицированным юзером", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 200)\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_create_order.TestCreateOrder object at 0x0000020C8E402A80>\nburger_ingredients = ['61c0c5a71d1f82001bdaaa73', '61c0c5a71d1f82001bdaaa6c', '61c0c5a71d1f82001bdaaa76', '61c0c5a71d1f82001bdaaa79']\n\n    @allure.title('Проверка ответа о создании заказа на запрос с указанными ингредиентами неаутентифицированным юзером')\n    @allure.description('С помощью параметризации выполняем два теста: по очереди отправляем запросы '\n                        'с разными наборами ингредиентов в бургере. Токен аккаунта не передается.')\n    @pytest.mark.parametrize('burger_ingredients', [IngredientData.burger_1, IngredientData.burger_2])\n    def test_create_order_unauthenticated_user_success(self, burger_ingredients):\n        payload = {'ingredients': [burger_ingredients]}\n        response = requests.post(Urls.order_create, data=payload, headers=Urls.headers)\n>       assert response.status_code == 200 and response.json()[\"success\"] is True\nE       assert (400 == 200)\nE        +  where 400 = <Response [400]>.status_code\n\ntests\\test_create_order.py:27: AssertionError"}, "description": "С помощью параметризации выполняем два теста: по очереди отправляем запросы с разными наборами ингредиентов в бургере. Токен аккаунта не передается.", "parameters": [{"name": "burger_ingredients", "value": "['61c0c5a71d1f82001bdaaa73', '61c0c5a71d1f82001bdaaa6c', '61c0c5a71d1f82001bdaaa76', '61c0c5a71d1f82001bdaaa79']"}], "start": 1733159328408, "stop": 1733159328867, "uuid": "35efa62b-93a8-4345-82ae-cfb962c6a98b", "historyId": "bee35cce29ffa9af17546a44e44f2c41", "testCaseId": "2d47242504ae801ac6c7f7d111f19db1", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_unauthenticated_user_success", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "LAPTOP-KPF2QR88"}, {"name": "thread", "value": "23496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}